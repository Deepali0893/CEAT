({
    /**
* Map of pre-chat field label to pre-chat field name (can be found in Setup)
*/
    fieldLabelToName: {
        "First Name": "FirstName",
        "Last Name": "LastName",
        "Email": "Email",
        "Mobile": "MobilePhone",
        "Consent for Whatsapp Communications":"ConsentForWhatsappCommunications_CEAT__c"
        
    },
    
    /**
* Event which fires the function to start a chat request (by accessing the chat API component)
*
* @param cmp - The component for this state.
*/
    onStartButtonClick: function(cmp) {
        var prechatFieldComponents = cmp.find("prechatField");
        var fields;
        
        // Make an array of field objects for the library
        fields = this.createFieldsArray(prechatFieldComponents);
        
        
        // If the pre-chat fields pass validation, start a chat
        if(cmp.find("prechatAPI").validateFields(fields).valid) {
            if(this.validatePrechatForm(cmp,fields)){
                cmp.find("prechatAPI").startChat(fields);
            }
        } else {
            
            console.warn("Prechat fields did not pass validation!");
            
        }
    },
    
    /**
* Create an array of field objects to start a chat from an array of pre-chat fields
*
* @param fields - Array of pre-chat field Objects.
* @returns An array of field objects.
*/
    createFieldsArray: function(fields) {
        if(fields.length) {
            return fields.map(function(fieldCmp) {
                return {
                    label: fieldCmp.get("v.label"),
                    value: fieldCmp.get("v.value"),
                    name: this.fieldLabelToName[fieldCmp.get("v.label")]
                };
            }.bind(this));
        } else {
            return [];
        }
    },
    
    /**
     * Create an array in the format $A.createComponents expects
     *
     * Example:
     * [["componentType", {attributeName: "attributeValue", ...}]]
     *
* @param prechatFields - Array of pre-chat field Objects.
* @returns Array that can be passed to $A.createComponents
     */
    getPrechatFieldAttributesArray: function(prechatFields) {
        // $A.createComponents first parameter is an array of arrays. Each array contains the type of component being created, and an Object defining the attributes.
        var prechatFieldsInfoArray = [];
        
        // For each field, prepare the type and attributes to pass to $A.createComponents
        prechatFields.forEach(function(field) {
            var componentName = (field.type === "inputSplitName") ? "inputText" : field.type;
            var componentInfoArray = ["ui:" + componentName];
            var attributes = {
                "aura:id": "prechatField",
                required: field.required,
                //required: true,
                label: field.label,
                disabled: field.readOnly,
                maxlength: field.maxLength,
                //class: field.className,
                class:'chatFields',
                labelClass:'chatLabel',
                value: field.value
            };
            
            // Special handling for options for an input:select (picklist) component
            if(field.type === "inputSelect" && field.picklistOptions) attributes.options = field.picklistOptions;
            
            // Append the attributes Object containing the required attributes to render this pre-chat field
            componentInfoArray.push(attributes);
            
            // Append this componentInfoArray to the fieldAttributesArray
            prechatFieldsInfoArray.push(componentInfoArray);
        });
        
        return prechatFieldsInfoArray;
    },
    validatePrechatForm:function(cmp,fields){
        //alert('=fields3='+JSON.stringify(fields));
        var i;
        var checkPhone=false;
        var checkEmail=false;
        var checkFirstName=false;
        var checkLastName =false; 
        for(i=0 ;i<fields.length;i++){
            
            if(fields[i].name == 'MobilePhone'){
                var phoneno = /^\d{10}$/;
                var validPhone = /^[5-9].*$/;
                if(fields[i].value){
                    if(fields[i].value.match(phoneno))
                    {
                        
                        if(fields[i].value.match(validPhone)){
                            checkPhone = true;
                            cmp.set("v.invalidPhone",false);
                        }
                        else{
                            cmp.set("v.invalidPhone",true);
                        }
                    }
                    else
                    {
                        cmp.set("v.invalidPhone",true);
                    }
                }
                else{
                    
                    cmp.set("v.invalidPhone",true);
                }
            }
            if(fields[i].name == 'Email'){
                var mailformat =/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                if(fields[i].value){
                    if(fields[i].value.match(mailformat)){
                        checkEmail = true;
                        cmp.set("v.invalidEmail",false);
                        
                    }
                    else{
                        cmp.set("v.invalidEmail",true);
                    }
                }
                else{
                    cmp.set("v.invalidEmail",true);
                }
                
            }
            if(fields[i].name == 'FirstName'){
                if(fields[i].value){
                    checkFirstName = true;
                    cmp.set("v.invalidFirstName",false);
                }
                else{
                    cmp.set("v.invalidFirstName",true);
                }
                
            }
            if(fields[i].name == 'LastName'){
                if(fields[i].value){
                    checkLastName = true;
                    cmp.set("v.invalidLastName",false);
                }
                else{
                    cmp.set("v.invalidLastName",true);
                }
                
            }
            
            
        }
        
        if(checkEmail==true && checkPhone==true && checkFirstName==true && checkLastName == true){
            
            return true;
            
        }
        else{
            return false;
        }
        
    }
});
